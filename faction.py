class FactionManager:
    def __init__(self):
        self.factions = {
            "Cienie": {
                "bonus": "+10% obra≈ºe≈Ñ nocƒÖ",
                "talenty": ["Skrytob√≥jstwo", "Iluzje", "Cisza"],
            },
            "Krwawe Ostrza": {
                "bonus": "+20% obra≈ºe≈Ñ przy <50% HP",
                "talenty": ["Sza≈Ç", "Zemsta", "W≈õciek≈Ço≈õƒá"],
            },
            "Lodowi Je≈∫d≈∫cy": {
                "bonus": "Zamra≈ºajƒÖ przeciwnik√≥w na 1 turƒô co 5 atak√≥w",
                "talenty": ["Lodowy Mur", "Frostbite", "Spowolnienie"],
            },
            "Zakon Wiedzy": {
                "bonus": "+15% moc czar√≥w",
                "talenty": ["P≈ÇonƒÖcy Pocisk", "Bariery", "Teleportacja"],
            },
        }
        self.player_faction = None

    def choose_faction(self):
        print("\nüè∞ Wybierz frakcjƒô:")
        for idx, (name, data) in enumerate(self.factions.items(), 1):
            print(f"{idx}. {name} - {data['bonus']}")
        choice = input(">> ")
        keys = list(self.factions.keys())
        try:
            self.player_faction = keys[int(choice) - 1]
            print(f"\n‚úÖ Wybrano frakcjƒô: {self.player_faction}")
        except (IndexError, ValueError):
            print("‚ùå Nieprawid≈Çowy wyb√≥r.")
            self.choose_faction()

    def get_faction_bonus(self):
        return self.factions[self.player_faction]["bonus"] if self.player_faction else None

    def get_faction_talents(self):
        return self.factions[self.player_faction]["talenty"] if self.player_faction else []

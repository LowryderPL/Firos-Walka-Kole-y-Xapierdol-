class Spell:
    def __init__(self, name, effect, cost):
        self.name = name
        self.effect = effect
        self.cost = cost

    def cast(self):
        print(f"\n>> Rzucasz zaklÄ™cie: {self.name}")
        print(f"Efekt: {self.effect}")
        print(f"Koszt many: {self.cost} ğŸª„")

def get_spellbook():
    return [
        Spell("PÅ‚omieÅ„ Igni", "Zadaje 30 obraÅ¼eÅ„ ognistych.", 5),
        Spell("Tarcza Quen", "PochÅ‚ania nastÄ™pny atak.", 4),
        Spell("ZamroÅ¼enie Aard", "Zatrzymuje wroga na 1 turÄ™.", 6),
        Spell("Zdrada Axii", "Kontrolujesz umysÅ‚ przeciwnika przez 1 turÄ™.", 8),
        Spell("Oczyszczenie Yrden", "Zmniejsza odpornoÅ›Ä‡ wroga na magiÄ™.", 7),
        Spell("Uzdrowienie Natury", "Przywraca 40 punktÃ³w Å¼ycia.", 6),
        Spell("WiÄ™zy Krwi", "PoÅ›wiÄ™Ä‡ 20 HP, by zadaÄ‡ 40 obraÅ¼eÅ„.", 0),
    ]

def use_spell():
    spellbook = get_spellbook()
    print("\n=== TWOJA KSIÄ˜GA ZAKLÄ˜Ä† ===")
    for idx, spell in enumerate(spellbook, start=1):
        print(f"{idx}. {spell.name} (Koszt: {spell.cost}) â€“ {spell.effect}")
    
    choice = input("\nWybierz numer zaklÄ™cia do rzucenia: ").strip()
    try:
        selected = spellbook[int(choice)-1]
        selected.cast()
    except (IndexError, ValueError):
        print("NieprawidÅ‚owy wybÃ³r zaklÄ™cia.")
